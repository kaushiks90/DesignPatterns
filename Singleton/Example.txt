using System;

namespace ConsoleApp
{
    internal class Program
    {
        private static void Main(string[] args)
        {
            Singleton s = Singleton.GetInstance;
            s.printDetails();

            Singleton s1 = Singleton.GetInstance;
            s1.printDetails();

            Console.ReadKey();
        }

    }
    //Singleton Without readonly
    ---------------------------------------------------------------------------------
       public class SingleTon
    {
        private static SingleTon _instance = null;
        private static Object obj = new object();
        private static int count=0;
        private SingleTon()
        {
            count += 1;
            Console.WriteLine(count);
        }

        public static SingleTon GetInstance
        {
            get
            {
                if (_instance == null)
                {
                    lock (obj)
                    {
                        if (_instance == null)
                        {
                            _instance = new SingleTon();

                        }
                    }
                }

                return _instance;
            }
        }

        public void PrintDetails()
        {
            Console.WriteLine("Details Printed");
        }

    }

    //Eager Loading  with readonly keyword
    -------------------------------------------------------------------------------------
    public sealed class Singleton
    {
        public static int count = 0;
        private static readonly Singleton _instance = new Singleton();
        private Singleton()
        {
            count += 1;
            Console.WriteLine(count);
        }
        public static Singleton GetInstance
        {
            get
            {
                return _instance;
            }
        }

        public void printDetails()
        {
            Console.WriteLine("You are in PrintDetails");
        }
    }
    //Lazy Loading with readonly
    -----------------------------------------------------------------------------------------
    public sealed class Singleton
    {
        public static int count = 0;
        private static readonly Lazy<Singleton> _instance = new Lazy<Singleton>(() => new Singleton());
        private Singleton()
        {
            count += 1;
            Console.WriteLine(count);
        }
        public static Singleton GetInstance
        {
            get
            {
                return _instance.Value;
            }
        }

        public void printDetails()
        {
            Console.WriteLine("You are in PrintDetails");
        }
    }
}
